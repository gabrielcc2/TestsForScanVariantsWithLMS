#include <fcntl.h>
#include <errno.h>
#include <err.h>
#include <sys/mman.h>
#include <sys/stat.h>
#include <stdio.h>
#include <stdint.h>
#include <unistd.h>
#include <stdlib.h>
void Scan(float*);
int main(int argc, char *argv[])
{
  if (argc < 4) {
    printf("Missing arguments. Usage: filename numberOfTuples compareValue numThreads (min=1)\n");
    return 0;
  }
  FILE *ptr_file;
  char buf[1000];
  int numTuples=atoi(argv[2]);
  float compareValue=atof(argv[3]);
  int numThreads=atoi(argv[4]);
  int numReadTuples=0;
  ptr_file =fopen(argv[1],"r");
  if (!ptr_file){
    return 0;
  }
  float *array;
  array=(float*)malloc(((2*numTuples)+3+numThreads)*sizeof(float));
  array[0]=compareValue;
  array[1]=(float)numTuples;
  array[2]=(float)numThreads;
  for (int i=0; i<numThreads; i++){
    array[3+i]=(float)0;
  }
  while (fgets(buf,1000, ptr_file)!=NULL && numReadTuples<numTuples){
    array[numReadTuples+3+numThreads]=atof(buf);
    numReadTuples++;
  }
  fclose(ptr_file);
  if (numReadTuples<numTuples){
    return 0;
  }
  Scan(array);
  return 1;
}
/*****************************************
Emitting C Generated Code
*******************************************/
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <stdbool.h>
void Scan(float*  x0) {
  float x7 = x0[2];
  float x5 = x0[1];
  float x10 = x5 / x7;
  float x6 = x0[0];
  int32_t x13 = 3 + x7;
  int32_t x33 = x5 * 2;
  int32_t x34 = x33 + 3;
  int32_t x35 = x34 + x7;
  //#Scan Variants- timer goes here
  // generated code for Scan Variants- timer goes here
  int32_t x1 = 0;
  int32_t x2 = 1;
  int32_t x3 = 3;
  int32_t x4 = 3;
  for(int x9=0; x9 < x7; x9++) {
    int32_t x14 = x9 * x5;
    int32_t x15 = x14 / x7;
    int32_t x20 = 3 + x9;
    float x21 = x0[x20];
    float x22 = x21 + 1.0f;
    //#parallel prefix sum
    // generated code for parallel prefix sum
    for(int x12=0; x12 < x10; x12++) {
      int32_t x16 = x12 + x15;
      int32_t x17 = x13 + x16;
      float x18 = x0[x17];
      bool x19 = x18 <= x6;
      if (x19) {
        x0[x20] = x22;
      } else {
      }
    }
    //#parallel prefix sum
  }
  printf("%s\n","Output array: ");
  for(int x37=0; x37 < x35; x37++) {
    float x38 = x0[x37];
    printf("%f\n",x38);
  }
  //#Scan Variants- timer goes here
}
/*****************************************
End of C Generated Code
*******************************************/
